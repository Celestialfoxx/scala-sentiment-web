{"ast":null,"code":"var _jsxFileName = \"/Users/yuxuan/Desktop/projects/scala-sentiment-web/src/components/Airline.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { BASE_URL } from '../constants'; // 确保这个路径正确指向你的常量定义\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Airline = () => {\n  _s();\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: []\n  });\n  useEffect(() => {\n    const url = `${BASE_URL}/airline`;\n    axios.get(url).then(response => {\n      const data = response.data;\n      if (Array.isArray(data) && data.length > 0) {\n        const hours = data.map(item => {\n          var _item$hour;\n          return (_item$hour = item.hour) !== null && _item$hour !== void 0 ? _item$hour : 'Unknown';\n        });\n        const averageSentiment = data.map(item => item.average_sentiment);\n        const averageSentimentComputed = data.map(item => item.average_sentiment_computed);\n        const absDifference = data.map(item => item.abs_difference);\n        const squaredDifference = data.map(item => item.squared_difference);\n        setChartData({\n          labels: hours,\n          datasets: [{\n            label: 'Average Sentiment',\n            data: averageSentiment,\n            backgroundColor: 'rgba(255, 99, 132, 0.6)'\n          }, {\n            label: 'Average Sentiment Computed',\n            data: averageSentimentComputed,\n            backgroundColor: 'rgba(54, 162, 235, 0.6)'\n          }, {\n            label: 'Absolute Difference',\n            data: absDifference,\n            backgroundColor: 'rgba(75, 192, 192, 0.6)'\n          }, {\n            label: 'Squared Difference',\n            data: squaredDifference,\n            backgroundColor: 'rgba(153, 102, 255, 0.6)'\n          }]\n        });\n      } else {\n        console.error('Data is not an array or is empty:', data);\n      }\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n\n  // 使用状态中的chartData渲染图表\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"airline-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Airline Performance Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Monthly Data Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: {\n        responsive: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Airline, \"ahPNUFkn5Ga5GkbKsbBuIhRM1eA=\");\n_c = Airline;\nexport default Airline;\nvar _c;\n$RefreshReg$(_c, \"Airline\");","map":{"version":3,"names":["React","useState","useEffect","Bar","axios","BASE_URL","jsxDEV","_jsxDEV","Airline","_s","chartData","setChartData","labels","datasets","url","get","then","response","data","Array","isArray","length","hours","map","item","_item$hour","hour","averageSentiment","average_sentiment","averageSentimentComputed","average_sentiment_computed","absDifference","abs_difference","squaredDifference","squared_difference","label","backgroundColor","console","error","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","responsive","_c","$RefreshReg$"],"sources":["/Users/yuxuan/Desktop/projects/scala-sentiment-web/src/components/Airline.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { BASE_URL } from '../constants';  // 确保这个路径正确指向你的常量定义\n\nconst Airline = () => {\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: []\n  });\n\n  useEffect(() => {\n    const url = `${BASE_URL}/airline`;\n\n    axios.get(url)\n      .then(response => {\n        const data = response.data;\n\n        if (Array.isArray(data) && data.length > 0) {\n          const hours = data.map(item => item.hour ?? 'Unknown');\n          const averageSentiment = data.map(item => item.average_sentiment);\n          const averageSentimentComputed = data.map(item => item.average_sentiment_computed);\n          const absDifference = data.map(item => item.abs_difference);\n          const squaredDifference = data.map(item => item.squared_difference);\n\n          setChartData({\n            labels: hours,\n            datasets: [\n              {\n                label: 'Average Sentiment',\n                data: averageSentiment,\n                backgroundColor: 'rgba(255, 99, 132, 0.6)',\n              },\n              {\n                label: 'Average Sentiment Computed',\n                data: averageSentimentComputed,\n                backgroundColor: 'rgba(54, 162, 235, 0.6)',\n              },\n              {\n                label: 'Absolute Difference',\n                data: absDifference,\n                backgroundColor: 'rgba(75, 192, 192, 0.6)',\n              },\n              {\n                label: 'Squared Difference',\n                data: squaredDifference,\n                backgroundColor: 'rgba(153, 102, 255, 0.6)',\n              }\n            ]\n          });\n        } else {\n          console.error('Data is not an array or is empty:', data);\n        }\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n      });\n  }, []);\n\n  // 使用状态中的chartData渲染图表\n  return (\n    <div className=\"airline-container\">\n      <h1>Airline Performance Analysis</h1>\n      <h2>Monthly Data Overview</h2>\n      <Bar data={chartData} options={{ responsive: true }} />\n    </div>\n  );\n};\n\nexport default Airline;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}