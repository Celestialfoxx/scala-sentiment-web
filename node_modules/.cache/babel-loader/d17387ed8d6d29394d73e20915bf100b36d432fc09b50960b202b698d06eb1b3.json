{"ast":null,"code":"var _jsxFileName = \"/Users/yuxuan/Desktop/projects/scala-sentiment-web/src/components/Airline.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { BASE_URL } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Airline = () => {\n  _s();\n  const [chartData, setChartData] = useState({\n    datasets: []\n  });\n  useEffect(() => {\n    const url = `${BASE_URL}/airline`;\n    axios.get(url).then(response => {\n      const data = response.data;\n      if (Array.isArray(data) && data.length > 0) {\n        const hours = data.map((item, index) => item.hour !== undefined ? item.hour : `Unknown ${index}`);\n        const averageSentiment = data.map(item => item.average_sentiment);\n        const averageSentimentComputed = data.map(item => item.average_sentiment_computed);\n        setChartData({\n          labels: hours,\n          datasets: [{\n            label: 'Average Sentiment',\n            data: averageSentiment,\n            backgroundColor: 'rgba(255, 99, 132, 0.6)'\n          }, {\n            label: 'Average Sentiment Computed',\n            data: averageSentimentComputed,\n            backgroundColor: 'rgba(54, 162, 235, 0.6)'\n          }]\n        });\n      } else {\n        console.error('Data is not an array or is empty');\n      }\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"airline-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Airline Performance Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Monthly Data Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), chartData && /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Airline, \"G3mVgiy1PV35MTQ4k0yxKB3K4MQ=\");\n_c = Airline;\nexport default Airline;\nvar _c;\n$RefreshReg$(_c, \"Airline\");","map":{"version":3,"names":["React","useState","useEffect","Bar","axios","BASE_URL","jsxDEV","_jsxDEV","Airline","_s","chartData","setChartData","datasets","url","get","then","response","data","Array","isArray","length","hours","map","item","index","hour","undefined","averageSentiment","average_sentiment","averageSentimentComputed","average_sentiment_computed","labels","label","backgroundColor","console","error","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yuxuan/Desktop/projects/scala-sentiment-web/src/components/Airline.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { BASE_URL } from '../constants';\n\nconst Airline = () => {\n  const [chartData, setChartData] = useState({ datasets: [] });\n\n  useEffect(() => {\n    const url = `${BASE_URL}/airline`;\n\n    axios.get(url)\n      .then(response => {\n        const data = response.data;\n\n        if (Array.isArray(data) && data.length > 0) {\n          const hours = data.map((item, index) => item.hour !== undefined ? item.hour : `Unknown ${index}`);\n          const averageSentiment = data.map(item => item.average_sentiment);\n          const averageSentimentComputed = data.map(item => item.average_sentiment_computed);\n\n          setChartData({\n            labels: hours,\n            datasets: [\n              {\n                label: 'Average Sentiment',\n                data: averageSentiment,\n                backgroundColor: 'rgba(255, 99, 132, 0.6)',\n              },\n              {\n                label: 'Average Sentiment Computed',\n                data: averageSentimentComputed,\n                backgroundColor: 'rgba(54, 162, 235, 0.6)',\n              }\n            ]\n          });\n        } else {\n          console.error('Data is not an array or is empty');\n        }\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n      });\n  }, []);\n\n  return (\n    <div className=\"airline-container\">\n      <h1>Airline Performance Analysis</h1>\n      <h2>Monthly Data Overview</h2>\n      {chartData && <Bar data={chartData} />}\n    </div>\n  );\n};\n\nexport default Airline;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC;IAAEW,QAAQ,EAAE;EAAG,CAAC,CAAC;EAE5DV,SAAS,CAAC,MAAM;IACd,MAAMW,GAAG,GAAI,GAAER,QAAS,UAAS;IAEjCD,KAAK,CAACU,GAAG,CAACD,GAAG,CAAC,CACXE,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAI;MAE1B,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,IAAIA,IAAI,CAACG,MAAM,GAAG,CAAC,EAAE;QAC1C,MAAMC,KAAK,GAAGJ,IAAI,CAACK,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAKD,IAAI,CAACE,IAAI,KAAKC,SAAS,GAAGH,IAAI,CAACE,IAAI,GAAI,WAAUD,KAAM,EAAC,CAAC;QACjG,MAAMG,gBAAgB,GAAGV,IAAI,CAACK,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACK,iBAAiB,CAAC;QACjE,MAAMC,wBAAwB,GAAGZ,IAAI,CAACK,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACO,0BAA0B,CAAC;QAElFnB,YAAY,CAAC;UACXoB,MAAM,EAAEV,KAAK;UACbT,QAAQ,EAAE,CACR;YACEoB,KAAK,EAAE,mBAAmB;YAC1Bf,IAAI,EAAEU,gBAAgB;YACtBM,eAAe,EAAE;UACnB,CAAC,EACD;YACED,KAAK,EAAE,4BAA4B;YACnCf,IAAI,EAAEY,wBAAwB;YAC9BI,eAAe,EAAE;UACnB,CAAC;QAEL,CAAC,CAAC;MACJ,CAAC,MAAM;QACLC,OAAO,CAACC,KAAK,CAAC,kCAAkC,CAAC;MACnD;IACF,CAAC,CAAC,CACDC,KAAK,CAACD,KAAK,IAAI;MACdD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE5B,OAAA;IAAK8B,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChC/B,OAAA;MAAA+B,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCnC,OAAA;MAAA+B,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7BhC,SAAS,iBAAIH,OAAA,CAACJ,GAAG;MAACc,IAAI,EAAEP;IAAU;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV,CAAC;AAACjC,EAAA,CA9CID,OAAO;AAAAmC,EAAA,GAAPnC,OAAO;AAgDb,eAAeA,OAAO;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}