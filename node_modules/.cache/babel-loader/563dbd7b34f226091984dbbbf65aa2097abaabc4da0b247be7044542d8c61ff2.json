{"ast":null,"code":"var _jsxFileName = \"/Users/yuxuan/Desktop/projects/scala-sentiment-web/src/components/Airline.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport Papa from 'papaparse';\nimport { BASE_URL } from './constants'; // 确保这里的路径正确指向你的常量定义\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Airline = () => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    const url = `${BASE_URL}/airline.csv`; // 修改为实际CSV文件的URL\n    axios.get(url, {\n      responseType: 'blob'\n    }).then(response => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        Papa.parse(reader.result, {\n          complete: result => {\n            const csvData = result.data;\n            const labels = csvData[0].slice(1);\n            const data = csvData.slice(1).map(row => parseFloat(row[1])); // 假设数据在第二列\n            setChartData({\n              labels,\n              datasets: [{\n                label: 'Airline Data',\n                data,\n                backgroundColor: 'rgba(54, 162, 235, 0.6)'\n              }]\n            });\n          }\n        });\n      };\n      reader.readAsText(response.data);\n    }).catch(error => console.error('Error fetching CSV:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"airline-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Airline Performance Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Monthly Data Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), chartData && /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Airline, \"9euvDhZ+n6eLTlbzwvHmNPhoqAw=\");\n_c = Airline;\nexport default Airline;\nvar _c;\n$RefreshReg$(_c, \"Airline\");","map":{"version":3,"names":["React","useState","useEffect","Bar","axios","Papa","BASE_URL","jsxDEV","_jsxDEV","Airline","_s","chartData","setChartData","url","get","responseType","then","response","reader","FileReader","onload","parse","result","complete","csvData","data","labels","slice","map","row","parseFloat","datasets","label","backgroundColor","readAsText","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yuxuan/Desktop/projects/scala-sentiment-web/src/components/Airline.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport Papa from 'papaparse';\nimport { BASE_URL } from './constants';  // 确保这里的路径正确指向你的常量定义\n\nconst Airline = () => {\n  const [chartData, setChartData] = useState(null);\n\n  useEffect(() => {\n    const url = `${BASE_URL}/airline.csv`; // 修改为实际CSV文件的URL\n    axios.get(url, { responseType: 'blob' })\n      .then(response => {\n        const reader = new FileReader();\n        reader.onload = () => {\n          Papa.parse(reader.result, {\n            complete: (result) => {\n              const csvData = result.data;\n              const labels = csvData[0].slice(1);\n              const data = csvData.slice(1).map(row => parseFloat(row[1])); // 假设数据在第二列\n              setChartData({\n                labels,\n                datasets: [{\n                  label: 'Airline Data',\n                  data,\n                  backgroundColor: 'rgba(54, 162, 235, 0.6)',\n                }]\n              });\n            }\n          });\n        };\n        reader.readAsText(response.data);\n      })\n      .catch(error => console.error('Error fetching CSV:', error));\n  }, []);\n\n  return (\n    <div className=\"airline-container\">\n      <h1>Airline Performance Analysis</h1>\n      <h2>Monthly Data Overview</h2>\n      {chartData && <Bar data={chartData} />}\n    </div>\n  );\n};\n\nexport default Airline;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,WAAW;AAC5B,SAASC,QAAQ,QAAQ,aAAa,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMW,GAAG,GAAI,GAAEP,QAAS,cAAa,CAAC,CAAC;IACvCF,KAAK,CAACU,GAAG,CAACD,GAAG,EAAE;MAAEE,YAAY,EAAE;IAAO,CAAC,CAAC,CACrCC,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAG,MAAM;QACpBf,IAAI,CAACgB,KAAK,CAACH,MAAM,CAACI,MAAM,EAAE;UACxBC,QAAQ,EAAGD,MAAM,IAAK;YACpB,MAAME,OAAO,GAAGF,MAAM,CAACG,IAAI;YAC3B,MAAMC,MAAM,GAAGF,OAAO,CAAC,CAAC,CAAC,CAACG,KAAK,CAAC,CAAC,CAAC;YAClC,MAAMF,IAAI,GAAGD,OAAO,CAACG,KAAK,CAAC,CAAC,CAAC,CAACC,GAAG,CAACC,GAAG,IAAIC,UAAU,CAACD,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9DjB,YAAY,CAAC;cACXc,MAAM;cACNK,QAAQ,EAAE,CAAC;gBACTC,KAAK,EAAE,cAAc;gBACrBP,IAAI;gBACJQ,eAAe,EAAE;cACnB,CAAC;YACH,CAAC,CAAC;UACJ;QACF,CAAC,CAAC;MACJ,CAAC;MACDf,MAAM,CAACgB,UAAU,CAACjB,QAAQ,CAACQ,IAAI,CAAC;IAClC,CAAC,CAAC,CACDU,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC,CAAC;EAChE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE5B,OAAA;IAAK8B,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChC/B,OAAA;MAAA+B,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCnC,OAAA;MAAA+B,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7BhC,SAAS,iBAAIH,OAAA,CAACL,GAAG;MAACsB,IAAI,EAAEd;IAAU;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV,CAAC;AAACjC,EAAA,CArCID,OAAO;AAAAmC,EAAA,GAAPnC,OAAO;AAuCb,eAAeA,OAAO;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}