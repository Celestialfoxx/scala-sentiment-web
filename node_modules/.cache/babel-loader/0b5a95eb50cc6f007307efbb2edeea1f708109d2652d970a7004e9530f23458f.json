{"ast":null,"code":"var _jsxFileName = \"/Users/yuxuan/Desktop/projects/scala-sentiment-web/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Tabs, message, Row, Col, Button } from \"antd\";\nimport axios from \"axios\";\nimport Chart from \"./Chart\";\nimport { SEARCH_KEY, BASE_URL } from \"../constants\";\nimport Airline from \"./Airline\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TabPane\n} = Tabs;\nfunction Home(props) {\n  _s();\n  const [activeTab, setActiveTab] = useState(\"home\");\n  //   const [data, setData] = useState(null);\n\n  //   const fetchData = (option) => {\n  //     const { type } = option;\n  //     let url = \"\";\n\n  //     if (type === SEARCH_KEY.all) {\n  //         url = `${BASE_URL}/home`;\n  //       } else if (type === SEARCH_KEY.airline) {\n  //         url = `${BASE_URL}/`;\n  //       } else {\n  //         url = `${BASE_URL}/search?keywords=${type}`;\n  //       }\n\n  //     const opt = {\n  //       method: \"GET\",\n  //       url: url,\n  //     };\n\n  //     axios(opt)\n  //       .then((res) => {\n  //         if (res.status === 200) {\n  //           setData(res.data);\n  //         }\n  //       })\n  //       .catch((err) => {\n  //         message.error(\"Fetch data failed!\");\n  //         console.error(\"fetch data failed: \", err.message);\n  //       });\n  //   };\n\n  //handle tab change\n  const handleTabChange = key => {\n    setActiveTab(key);\n  };\n\n  // 假设您想在组件加载时调用 fetchData\n  useEffect(() => {\n    fetchData(activeTab);\n  }, [activeTab]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display\",\n      children: [/*#__PURE__*/_jsxDEV(Chart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        onChange: key => setActiveTab(key),\n        defaultActiveKey: \"home\",\n        activeKey: activeTab,\n        children: [/*#__PURE__*/_jsxDEV(TabPane, {\n          tab: \"Home\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"header\",\n            children: \"Sentiment Analysis Trend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"intro\",\n            children: \"Select the topics you are interested in to see the trends in public emotions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 12\n          }, this)]\n        }, \"home\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n          tab: \"Airline\",\n          children: /*#__PURE__*/_jsxDEV(Airline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 12\n          }, this)\n        }, \"airline\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n}\n_s(Home, \"nAx6ATc8LzBU6pP5D/JSAe49u+k=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Tabs","message","Row","Col","Button","axios","Chart","SEARCH_KEY","BASE_URL","Airline","jsxDEV","_jsxDEV","TabPane","Home","props","_s","activeTab","setActiveTab","handleTabChange","key","fetchData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","defaultActiveKey","activeKey","tab","_c","$RefreshReg$"],"sources":["/Users/yuxuan/Desktop/projects/scala-sentiment-web/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Tabs, message, Row, Col, Button } from \"antd\";\nimport axios from \"axios\";\nimport Chart from \"./Chart\";\nimport { SEARCH_KEY, BASE_URL } from \"../constants\";\nimport Airline from \"./Airline\";\n\nconst { TabPane } = Tabs;\n\nfunction Home(props) {\n  const [activeTab, setActiveTab] = useState(\"home\");\n//   const [data, setData] = useState(null);\n\n//   const fetchData = (option) => {\n//     const { type } = option;\n//     let url = \"\";\n\n//     if (type === SEARCH_KEY.all) {\n//         url = `${BASE_URL}/home`;\n//       } else if (type === SEARCH_KEY.airline) {\n//         url = `${BASE_URL}/`;\n//       } else {\n//         url = `${BASE_URL}/search?keywords=${type}`;\n//       }\n\n//     const opt = {\n//       method: \"GET\",\n//       url: url,\n//     };\n\n//     axios(opt)\n//       .then((res) => {\n//         if (res.status === 200) {\n//           setData(res.data);\n//         }\n//       })\n//       .catch((err) => {\n//         message.error(\"Fetch data failed!\");\n//         console.error(\"fetch data failed: \", err.message);\n//       });\n//   };\n\n  //handle tab change\n  const handleTabChange = (key) => {\n    setActiveTab(key);\n  };\n\n  // 假设您想在组件加载时调用 fetchData\n  useEffect(() => {\n    fetchData(activeTab);\n  }, [activeTab]);\n\n  return <div className=\"home\"> \n  <div className=\"display\">\n    <Chart />\n       <Tabs\n         onChange={(key) => setActiveTab(key)}\n         defaultActiveKey=\"home\"\n         activeKey={activeTab}\n       >\n         <TabPane tab=\"Home\" key=\"home\">\n           <h1 className=\"header\">Sentiment Analysis Trend</h1>\n           <h2 className=\"intro\">Select the topics you are interested in to see the trends in public emotions</h2>\n         </TabPane>\n         <TabPane tab=\"Airline\" key=\"airline\">\n           <Airline />\n         </TabPane>\n       </Tabs>\n     </div>\n  </div>;\n}\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,OAAO,EAAEC,GAAG,EAAEC,GAAG,EAAEC,MAAM,QAAQ,MAAM;AACtD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,UAAU,EAAEC,QAAQ,QAAQ,cAAc;AACnD,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAM;EAAEC;AAAQ,CAAC,GAAGZ,IAAI;AAExB,SAASa,IAAIA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,MAAM,CAAC;EACpD;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE;EACA,MAAMoB,eAAe,GAAIC,GAAG,IAAK;IAC/BF,YAAY,CAACE,GAAG,CAAC;EACnB,CAAC;;EAED;EACApB,SAAS,CAAC,MAAM;IACdqB,SAAS,CAACJ,SAAS,CAAC;EACtB,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,oBAAOL,OAAA;IAAKU,SAAS,EAAC,MAAM;IAAAC,QAAA,eAC5BX,OAAA;MAAKU,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBX,OAAA,CAACL,KAAK;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACNf,OAAA,CAACX,IAAI;QACH2B,QAAQ,EAAGR,GAAG,IAAKF,YAAY,CAACE,GAAG,CAAE;QACrCS,gBAAgB,EAAC,MAAM;QACvBC,SAAS,EAAEb,SAAU;QAAAM,QAAA,gBAErBX,OAAA,CAACC,OAAO;UAACkB,GAAG,EAAC,MAAM;UAAAR,QAAA,gBACjBX,OAAA;YAAIU,SAAS,EAAC,QAAQ;YAAAC,QAAA,EAAC;UAAwB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpDf,OAAA;YAAIU,SAAS,EAAC,OAAO;YAAAC,QAAA,EAAC;UAA4E;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAFjF,MAAM;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGrB,CAAC,eACVf,OAAA,CAACC,OAAO;UAACkB,GAAG,EAAC,SAAS;UAAAR,QAAA,eACpBX,OAAA,CAACF,OAAO;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC,GADc,SAAS;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAE3B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AACR;AAACX,EAAA,CA7DQF,IAAI;AAAAkB,EAAA,GAAJlB,IAAI;AA+Db,eAAeA,IAAI;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}