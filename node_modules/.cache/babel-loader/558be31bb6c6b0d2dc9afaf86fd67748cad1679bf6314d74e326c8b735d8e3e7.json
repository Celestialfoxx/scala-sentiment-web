{"ast":null,"code":"var _jsxFileName = \"/Users/yuxuan/Desktop/projects/scala-sentiment-web/src/components/Airline.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { BASE_URL } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst Airline = () => {\n  _s();\n  const [chartData, setChartData] = useState({\n    datasets: []\n  });\n  const [sentimentData, setSentimentData] = useState({\n    datasets: []\n  });\n  const [overviewData, setOverviewData] = useState(null);\n  useEffect(() => {\n    const url = `${BASE_URL}/airline`;\n    axios.get(url).then(response => {\n      const data = response.data;\n      if (Array.isArray(data) && data.length > 0) {\n        // Separate the first row as overview data\n        const [firstRow, ...restOfData] = data;\n        setOverviewData(firstRow);\n        const hours = restOfData.map(item => {\n          var _item$hour;\n          return (_item$hour = item.hour) !== null && _item$hour !== void 0 ? _item$hour : 'Unknown';\n        });\n        const averageSentiment = restOfData.map(item => item.average_sentiment);\n        const averageSentimentComputed = restOfData.map(item => item.average_sentiment_computed);\n\n        // Data for the first chart\n        setChartData({\n          labels: hours,\n          datasets: [{\n            label: 'Average Sentiment',\n            data: averageSentiment,\n            backgroundColor: 'rgba(255, 99, 132, 0.6)'\n          }, {\n            label: 'Average Sentiment Computed',\n            data: averageSentimentComputed,\n            backgroundColor: 'rgba(54, 162, 235, 0.6)'\n          }]\n        });\n\n        // Data for the second chart (only average sentiment)\n        setSentimentData({\n          labels: hours,\n          datasets: [{\n            label: 'Average Sentiment',\n            data: averageSentiment,\n            backgroundColor: 'rgba(75, 192, 192, 0.6)'\n          }]\n        });\n      } else {\n        console.error('Data is not an array or is empty');\n      }\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n  const options = {\n    scales: {\n      x: {\n        type: 'category',\n        title: {\n          display: true,\n          text: 'Hour of the Day'\n        }\n      },\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Sentiment Value'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Airline Sentiment Analysis',\n        font: {\n          size: 20\n        }\n      }\n    },\n    responsive: true\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"airline-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Airline Performance Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), overviewData && /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Average Sentiment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Average Sentiment Computed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Absolute Difference\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Squared Difference\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: overviewData.average_sentiment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: overviewData.average_sentiment_computed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: overviewData.abs_difference\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: overviewData.squared_difference\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), sentimentData && /*#__PURE__*/_jsxDEV(Bar, {\n      data: sentimentData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Monthly Data Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), chartData && /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(Airline, \"GWORclE1QXU8RYuVoplPoVBRWnE=\");\n_c = Airline;\nexport default Airline;\nvar _c;\n$RefreshReg$(_c, \"Airline\");","map":{"version":3,"names":["React","useState","useEffect","Bar","axios","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","BASE_URL","jsxDEV","_jsxDEV","register","Airline","_s","chartData","setChartData","datasets","sentimentData","setSentimentData","overviewData","setOverviewData","url","get","then","response","data","Array","isArray","length","firstRow","restOfData","hours","map","item","_item$hour","hour","averageSentiment","average_sentiment","averageSentimentComputed","average_sentiment_computed","labels","label","backgroundColor","console","error","catch","options","scales","x","type","title","display","text","y","beginAtZero","plugins","legend","position","font","size","responsive","className","children","fileName","_jsxFileName","lineNumber","columnNumber","abs_difference","squared_difference","_c","$RefreshReg$"],"sources":["/Users/yuxuan/Desktop/projects/scala-sentiment-web/src/components/Airline.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n} from 'chart.js';\nimport { BASE_URL } from '../constants';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst Airline = () => {\n  const [chartData, setChartData] = useState({ datasets: [] });\n  const [sentimentData, setSentimentData] = useState({ datasets: [] });\n  const [overviewData, setOverviewData] = useState(null);\n\n  useEffect(() => {\n    const url = `${BASE_URL}/airline`;\n\n    axios.get(url)\n      .then(response => {\n        const data = response.data;\n\n        if (Array.isArray(data) && data.length > 0) {\n          // Separate the first row as overview data\n          const [firstRow, ...restOfData] = data;\n          setOverviewData(firstRow);\n\n          const hours = restOfData.map(item => item.hour ?? 'Unknown');\n          const averageSentiment = restOfData.map(item => item.average_sentiment);\n          const averageSentimentComputed = restOfData.map(item => item.average_sentiment_computed);\n\n          // Data for the first chart\n          setChartData({\n            labels: hours,\n            datasets: [\n              {\n                label: 'Average Sentiment',\n                data: averageSentiment,\n                backgroundColor: 'rgba(255, 99, 132, 0.6)',\n              },\n              {\n                label: 'Average Sentiment Computed',\n                data: averageSentimentComputed,\n                backgroundColor: 'rgba(54, 162, 235, 0.6)',\n              }\n            ]\n          });\n\n          // Data for the second chart (only average sentiment)\n          setSentimentData({\n            labels: hours,\n            datasets: [\n              {\n                label: 'Average Sentiment',\n                data: averageSentiment,\n                backgroundColor: 'rgba(75, 192, 192, 0.6)',\n              }\n            ]\n          });\n        } else {\n          console.error('Data is not an array or is empty');\n        }\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n      });\n  }, []);\n\n  const options = {\n    scales: {\n      x: {\n        type: 'category',\n        title: {\n          display: true,\n          text: 'Hour of the Day'\n        }\n      },\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Sentiment Value'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Airline Sentiment Analysis',\n        font: {\n          size: 20\n        }\n      }\n    },\n    responsive: true\n  };\n\n  return (\n    <div className=\"airline-container\">\n      <h1>Airline Performance Analysis</h1>\n      \n      {overviewData && (\n        <table>\n          <thead>\n            <tr>\n              <th>Average Sentiment</th>\n              <th>Average Sentiment Computed</th>\n              <th>Absolute Difference</th>\n              <th>Squared Difference</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>{overviewData.average_sentiment}</td>\n              <td>{overviewData.average_sentiment_computed}</td>\n              <td>{overviewData.abs_difference}</td>\n              <td>{overviewData.squared_difference}</td>\n            </tr>\n          </tbody>\n        </table>\n      )}\n\n      {/* <h2>Average Sentiment Analysis</h2> */}\n      {sentimentData && <Bar data={sentimentData} options={options}/>}\n\n      <h2>Monthly Data Overview</h2>\n      {chartData && <Bar data={chartData} />}\n\n\n    </div>\n  );\n};\n\nexport default Airline;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}